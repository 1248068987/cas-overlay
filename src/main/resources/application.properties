##
# CAS Server Context Configuration
#
#server.context-path=/cas
#server.port=443
cas.server.name=https://cas.newtranx.com
cas.server.prefix=${cas.server.name}/cas
server.ssl.key-store=file:d:/my.keystore
server.ssl.key-store-password=changeit
server.ssl.key-password=changeit
# server.ssl.ciphers=
# server.ssl.client-auth=
# server.ssl.enabled=
# server.ssl.key-alias=
# server.ssl.key-store-provider=
# server.ssl.key-store-type=
# server.ssl.protocol=
# server.ssl.trust-store=
# server.ssl.trust-store-password=
# server.ssl.trust-store-provider=
# server.ssl.trust-store-type=

server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.include-stacktrace=ALWAYS

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.max-threads=10
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false
# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

security.basic.authorize-mode=role
security.basic.enabled=false
security.basic.path=/cas/status/**

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

##
# CAS Authentication Credentials
#
# cas.authn.accept.users=casuser::Mellon





# //这个代表的是运行读取json配置文件
cas.serviceRegistry.initFromJson=true
#//这个代表的是自动扫描，默认是开启的
cas.serviceRegistry.watcherEnabled=true
#//代表的是多久扫描一次
cas.serviceRegistry.repeatInterval=120000
#//延迟15秒开启
cas.serviceRegistry.startDelay=15000

cas.serviceRegistry.config.location=classpath:/services
cas.serviceRegistry.json.location=classpath:/services

#mysql 数据库配置
cas.authn.jdbc.query[0].passwordEncoder.type=DEFAULT
cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=UTF-8
cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm=SHA-256
cas.authn.jdbc.query[0].sql=select * from user where username=? 
cas.authn.jdbc.query[0].healthQuery=
cas.authn.jdbc.query[0].isolateInternalQueries=false
cas.authn.jdbc.query[0].url=jdbc:mysql://avictest.newtranx.com:3306/ucenter?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT
cas.authn.jdbc.query[0].user=znfy_db
cas.authn.jdbc.query[0].password=xykjDB_2015
cas.authn.jdbc.query[0].failFast=true
cas.authn.jdbc.query[0].isolationLevelName=ISOLATION_READ_COMMITTED
cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.MySQLDialect
cas.authn.jdbc.query[0].leakThreshold=10
cas.authn.jdbc.query[0].propagationBehaviorName=PROPAGATION_REQUIRED
cas.authn.jdbc.query[0].batchSize=1
cas.authn.jdbc.query[0].maxAgeDays=180
cas.authn.jdbc.query[0].autocommit=false
cas.authn.jdbc.query[0].driverClass=com.mysql.jdbc.Driver
cas.authn.jdbc.query[0].idleTimeout=5000
cas.authn.jdbc.query[0].fieldPassword=password



## 多属性返回开始

###单行
# key为数据库的列，value为输出属性的key
cas.authn.attributeRepository.jdbc[0].attributes.id=id
cas.authn.attributeRepository.jdbc[0].attributes.username=username
cas.authn.attributeRepository.jdbc[0].attributes.realname=realname
cas.authn.attributeRepository.jdbc[0].attributes.gender=gender
cas.authn.attributeRepository.jdbc[0].attributes.email=email
cas.authn.attributeRepository.jdbc[0].attributes.qq=qq
cas.authn.attributeRepository.jdbc[0].attributes.phone=phone
cas.authn.attributeRepository.jdbc[0].attributes.motherTongue=motherTongue
cas.authn.attributeRepository.jdbc[0].attributes.birthday=birthday
cas.authn.attributeRepository.jdbc[0].attributes.area=area
cas.authn.attributeRepository.jdbc[0].attributes.contact=contact
cas.authn.attributeRepository.jdbc[0].attributes.school=school
cas.authn.attributeRepository.jdbc[0].attributes.homepage=homepage
cas.authn.attributeRepository.jdbc[0].attributes.roleid=roleid
cas.authn.attributeRepository.jdbc[0].attributes.role=role
cas.authn.attributeRepository.jdbc[0].attributes.deleteflag=deleteflag
cas.authn.attributeRepository.jdbc[0].attributes.creationdate=creationdate
cas.authn.attributeRepository.jdbc[0].attributes.updatetime=updatetime
cas.authn.attributeRepository.jdbc[0].attributes.description=description
cas.authn.attributeRepository.jdbc[0].attributes.portrait=portrait
cas.authn.attributeRepository.jdbc[0].attributes.college=college
cas.authn.attributeRepository.jdbc[0].attributes.class=class
cas.authn.attributeRepository.jdbc[0].attributes.studentID=studentID
cas.authn.attributeRepository.jdbc[0].attributes.flag=flag
cas.authn.attributeRepository.jdbc[0].attributes.sysId=sysId
cas.authn.attributeRepository.jdbc[0].attributes.regip=regip
cas.authn.attributeRepository.jdbc[0].attributes.thirdId=thirdId
cas.authn.attributeRepository.jdbc[0].singleRow=true
cas.authn.attributeRepository.jdbc[0].order=0
cas.authn.attributeRepository.jdbc[0].url=${cas.authn.jdbc.query[0].url}
# 以下属性为查询sql时，当为多个时逗号分隔，如填写username、email,sql会变成 select * from sys_user where username=${?} {and/or} email=${?}
cas.authn.attributeRepository.jdbc[0].username=username
cas.authn.attributeRepository.jdbc[0].queryType=OR
cas.authn.attributeRepository.jdbc[0].user=${cas.authn.jdbc.query[0].user}
cas.authn.attributeRepository.jdbc[0].password=${cas.authn.jdbc.query[0].password}
cas.authn.attributeRepository.jdbc[0].sql=select * from user where {0}
cas.authn.attributeRepository.jdbc[0].dialect=${cas.authn.jdbc.query[0].dialect}
cas.authn.attributeRepository.jdbc[0].ddlAuto=none
cas.authn.attributeRepository.jdbc[0].driverClass=${cas.authn.jdbc.query[0].driverClass}
cas.authn.attributeRepository.jdbc[0].leakThreshold=10
cas.authn.attributeRepository.jdbc[0].propagationBehaviorName=PROPAGATION_REQUIRED
cas.authn.attributeRepository.jdbc[0].batchSize=1
cas.authn.attributeRepository.jdbc[0].failFast=true


#多行
# cas.authn.attributeRepository.jdbc[1].attributes.group=group_multi
# cas.authn.attributeRepository.jdbc[1].attributes.school=school_multi
# #键值对
# cas.authn.attributeRepository.jdbc[1].columnMappings.ATTR_KEY=ATTR_VAL
# cas.authn.attributeRepository.jdbc[1].singleRow=false
# cas.authn.attributeRepository.jdbc[1].order=1
# cas.authn.attributeRepository.jdbc[1].url=${cas.authn.jdbc.query[0].url}
# cas.authn.attributeRepository.jdbc[1].username=username
# cas.authn.attributeRepository.jdbc[1].user=${cas.authn.jdbc.query[0].user}
# cas.authn.attributeRepository.jdbc[1].password=${cas.authn.jdbc.query[0].password}
# cas.authn.attributeRepository.jdbc[1].sql=select * from sys_attrs where {0}
# cas.authn.attributeRepository.jdbc[1].dialect=${cas.authn.jdbc.query[0].dialect}
# cas.authn.attributeRepository.jdbc[1].ddlAuto=none
# cas.authn.attributeRepository.jdbc[1].driverClass=${cas.authn.jdbc.query[0].driverClass}
# cas.authn.attributeRepository.jdbc[1].leakThreshold=10
# cas.authn.attributeRepository.jdbc[1].propagationBehaviorName=PROPAGATION_REQUIRED
# cas.authn.attributeRepository.jdbc[1].batchSize=1
# cas.authn.attributeRepository.jdbc[1].failFast=true
## 多属性返回结束

cas.authn.oauth.refreshToken.timeToKillInSeconds=259200
cas.authn.oauth.code.timeToKillInSeconds=30
cas.authn.oauth.code.numberOfUses=1
cas.authn.oauth.accessToken.releaseProtocolAttributes=true
cas.authn.oauth.accessToken.timeToKillInSeconds=7200
cas.authn.oauth.accessToken.maxTimeToLiveInSeconds=2880
cas.authn.oauth.grants.resourceOwner.requireServiceHeader=true
cas.authn.oauth.userProfileViewType=FLAT
cas.authn.oauth.throttler=neverThrottle
# |authenticationThrottle